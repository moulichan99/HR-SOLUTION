sample Ip:

6 3 // 6 -size ,k=3
5 1
2 1
1 1
8 1
10 0
5 0

Sample Output
29

explantion:
count = 4 // no of 1 (important contest )in contest[i...][1]=1 // contest array
sub = count - k = 1; // we have to decrease amount of sub  is (i.e: 1) which should be minimum 

5+2+1+8+10+5 = 31 - (1*2) = 29 // mul by 2 is for already we added 1 to list ,sub 1  is simply neutralize the addded 1  so, we do -1 two times

int luckBalance(int k, int contests_rows, int contests_columns, int** contests) {
int i,j,total=0,temp[contests_rows],count=0,temp_var,num=0,sub=0;
    for(i=0;i<contests_rows;i++)
    {
        total+=contests[i][0];
        if(contests[i][1]==1)
        {
          temp[count] = contests[i][0];
          count++;
        }        
    }
    for(i=0;i<count-1;i++)
    {
        for(j=i+1;j<count;j++)
        {
            if(temp[i]>temp[j])
            {
                temp_var=temp[j];
                temp[j]=temp[i];
                temp[i]=temp_var;
            }
        }
    }
    num = count - k;
    for(i=0;i<num;i++)
    {
        sub+=temp[i];
    }
    sub=sub*2;
    total=total-sub;
return total;
}
