Explanation 0

Given , we would need to remove two characters, both c and d  aabb or a and b  abcd, to make it valid. We are limited to removing only one character, so  is invalid.

Sample Input 1

aabbccddeefghi
Sample Output 1

NO
Explanation 1

Frequency counts for the letters are as follows:

{'a': 2, 'b': 2, 'c': 2, 'd': 2, 'e': 2, 'f': 1, 'g': 1, 'h': 1, 'i': 1}

There are two ways to make the valid string:

Remove  characters with a frequency of : .
Remove  characters of frequency : .
Neither of these is an option.

Sample Input 2

abcdefghhgfedecba
Sample Output 2

YES
Explanation 2

All characters occur twice except for  which occurs  times. We can delete one instance of  to have a valid string.




string isValid(string s) {
int i,c[26]={0},t=0,ct=0;
    for(i=0;i<s.length();i++)
        {
        if(97<=s[i]&&s[i]<=123) 
             c[s[i]-97]++;      
        }
        for(i=0; i < 26;i++)
        {
            if(c[i]&&t==0)
            {
                t=c[i];
            }
            else if(c[i]&&t!=0)
            {
                if(t!=c[i])
                    ct++;
            }
                
        }
        if(ct<2)
        return "YES";
        else 
        return "NO";   
}
